apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: "{{ default "submission-preview" .Values.name }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    subsystem: "{{ .Values.labels.subsystem }}"
    service-group: "{{ .Values.labels.service_group }}"
    container: "{{ default "submission-preview" .Values.name }}"
    log-style: uwsgi
    env: "{{ .Values.namespace }}"

spec:
  replicas: {{ default 1 .Values.scaling.replicas }}

  template:
    metadata:
      namespace: "{{ .Values.namespace }}"
      labels:
        subsystem: "{{ .Values.labels.subsystem }}"
        container: "{{ default "submission-preview" .Values.name }}"
        service-group: "{{ .Values.labels.service_group }}"
        log-style: uwsgi
        env: "{{ .Values.namespace }}"
      # annotations:
      #   prometheus.io/scrape: 'true'
    spec:
      serviceAccount: "{{ default "submission-preview" .Values.name }}"
      volumes:
      - name: vault-token
        emptyDir: {}
      - name: vault-certificate
        secret:
          secretName: vault-certificate

      containers:
      - name: "{{ default "submission-preview" .Values.name }}"
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 8000

        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          httpGet:
            path: "/status"
            port: 8000

        env:
        - name: LOGLEVEL
          value: "{{ .Values.loglevel }}"
        - name: VAULT_ENABLED
          value: "{{ .Values.vault.enabled  }}"
        - name: VAULT_HOST
          value: "{{ .Values.vault.host }}"
        - name: VAULT_PORT
          value: "{{ .Values.vault.port }}"
        - name: VAULT_CERT
          value: /etc/vault-certificate/vaulttls.cert.pem
        - name: VAULT_ROLE
          value: "{{ .Values.vault.role }}-{{ .Values.namespace }}"
        - name: VAULT_CREDENTIAL
          value: "{{ .Values.vault.credential }}"
        - name: KUBE_TOKEN
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: NAMESPACE
          value: "{{ .Values.namespace }}"

        - name: WAIT_FOR_SERVICES
          value: "{{ .Values.config.wait_for_services }}"

        volumeMounts:
        - name: vault-certificate
          mountPath: /etc/vault-certificate
          readOnly: true
        - name: vault-token
          mountPath: /etc/vault

        resources:
          limits:
            cpu: 300m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi